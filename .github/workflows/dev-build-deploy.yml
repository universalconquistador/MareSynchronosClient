# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build & Deploy to Dev

on:
  push:
    branches: [ "dev-live" ]


jobs:
  dev-build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'true'
          token: ${{ secrets.CI_TOKEN }}
      - name: Download Dalamud binaries
        run: curl --output /home/runner/dalamud-distrib.zip -L "https://github.com/goatcorp/dalamud-distrib/raw/refs/heads/main/latest.zip"
      - name: Extract Dalamud binaries
        run: unzip /home/runner/dalamud-distrib.zip -d /home/runner/dalamud-distrib
      - name: List dalamud files
        run: ls /home/runner/dalamud-distrib
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
        env:
          DALAMUD_HOME: /home/runner/dalamud-distrib
      - name: Prepare artifact
        run: unzip MareSynchronos/bin/x64/Release/MareSempiterne/latest.zip -d MareSynchronos/bin/x64/Release/MareSempiterne/MareSempiterne
      - uses: actions/upload-artifact@v4
        with:
          name: MareSempiterne
          path: MareSynchronos/bin/x64/Release/MareSempiterne/MareSempiterne/
      - name: Deploy plugin to dev environment
        run: >
          curl --header "X-Deploy-Secret: ${{ secrets.DEPLOY_DEV_SECRET }}" --request POST --data-binary "@MareSynchronos/bin/x64/Release/MareSempiterne/MareSempiterne.json" https://dev.playersync.io/redux/deploy/client-manifest &&
          curl --header "X-Deploy-Secret: ${{ secrets.DEPLOY_DEV_SECRET }}" --request POST --data-binary "@MareSynchronos/bin/x64/Release/MareSempiterne/latest.zip" https://dev.playersync.io/redux/deploy/client-package/install
